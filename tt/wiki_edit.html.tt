[%- js.jquery = 1; js.ace = 1; js.autocomplete = 1; js.nonce = 1 -%]
[%- extra_head = BLOCK %]
<style>
  table.wiki_edit tr td { vertical-align: top; padding-right: 1em; }
</style>
[% END -%]
[% PROCESS includes/menu_begin.tti %]
[%- PROCESS includes/html_input.tti -%]
[%- PROCESS includes/autocomplete.tti -%]

<form method="post" enctype="multipart/form-data" action="[% wt.href_action %]">
<table class="wiki_edit edit_form">
<tr>
<td>
  <input type="hidden" name="wiki_lang" value="[% wt.indexed.wiki_lang.value | html %]"/>
  <input type="hidden" name="wiki_id" value="[% wt.indexed.wiki_id.value %]"/>
  <input type="hidden" name="settings_rows" value="[% settings.rows %]"/>
  [% wt.indexed.title.caption %] ([% wt.indexed.wiki_lang.value %]):<br>
  <input type="text" name="title" value="[% wt.indexed.title.value | html %]" size="80" class="bordered"/>
  [% maybe_err(wt.indexed.title) %]
</td>
<td>
  [%- href(href_view, capt.view); IF href_page; ' | '; href(href_page, capt.page); END %]
  | <label>
    [%- checkbox_1('sync', settings.sync, attrs = { id => 'sync', class => 'hidden' }); capt.synchronize -%]
    </label>
</td>
</tr>
<tr>
<td>
  <div id="editor">
  <textarea name="text" cols="80" rows="[% settings.rows || 35 %]"
    data-editor="markdown" data-gutter="1" data-id="ed_wi[% wt.indexed.wiki_id.value %]">
    [%- wt.indexed.text.value | html ~%]
  </textarea>
  </div>
  [% PROCESS includes/edit_save_cancel.tti %]
  <a class="problem_menu_trigger toolbar_item">&#x2795;
  <div class="editor_menu">
    <button type="button" id="insert_link" class="button toolbar_item">[% capt.insert_link %]</button>
    <button type="button" id="insert_image" class="button toolbar_item">[% capt.insert_image %]</button>
  </div>
  </a>

  <label>[% capt.file %]: <input id="file" type="text" size="20" class="bordered toolbar_item"/></label>
  <input id="file_guid" type="hidden" />
  <input id="file_description" type="hidden" />

  <a class="problem_menu_trigger toolbar_item">&#x2261;
    [%- PROCESS includes/editor_menu.tti editor_id = 'ed_wi' _ wt.indexed.wiki_id.value -%]
  </a>
</td>
<td>
  <div id="render" style="overflow-y: scroll;">
  [% wt.markdown %]
  </div>
</td>
</tr></table>
</form>
[% capt.author %]: [% wt.author %]<br>
[% capt.last_modified %]: [% wt.indexed.last_modified.value %]
<script nonce="[% nonce %]">
$(function() {

  var div_editor = $('#editor');
  var div_render = $('#render');
  var settings_rows = $('input[name=settings_rows]');

  if (!ace) return;
  var editor = Editor.get_editor(div_editor);
  if (!editor) return;

  var session = editor.session;
  var renderer = editor.renderer;
  var scrollBarV = renderer.scrollBarV;
  var sync = $('#sync').show();

  var locked = false;

  var resize = function() {
    div_render.height(div_editor.height());
    settings_rows.val(Math.floor(div_editor.height() / renderer.lineHeight));
  }
  resize();
  div_editor.children('textarea').data('onresize', resize);

  var sync_render = function() {
    if (!sync[0].checked) return;
    if (locked) {
      locked = false;
      return;
    }
    var pos = scrollBarV.scrollTop / Math.max(scrollBarV.scrollHeight, 1);
    locked = true;
    div_render[0].scrollTop = div_render[0].scrollHeight * pos;
  };
  var sync_editor = function() {
    if (!sync[0].checked) return;
    if (locked) {
      locked = false;
      return;
    }
    var pos = div_render[0].scrollTop / Math.max(div_render[0].scrollHeight, 1);
    locked = true;
    renderer.scrollToLine(session.getLength() * pos);
  };
  sync.click(function () {
    if (!sync[0].checked) return;
    locked = false;
    sync_render();
  });

  sync_render();
  scrollBarV.element.addEventListener('scroll', sync_render);
  div_render.scroll(sync_editor);

  var insert_function = function(prefix, default_text) {
    return function() {
      editor.focus();
      var name = $('#file').val();
      var guid = $('#file_guid').val();
      var descr = $('#file_description').val();
      editor.insert(AutoComplete.fmt('{0}[{1}]({2}{3})', [
        prefix, descr || default_text,
        guid ? '[% href_download %]' + guid : 'https://url',
        name ? ' "' + name + '"' : ''
      ]));
    }
  }
  $('.problem_menu_trigger').click(function() { $(this).toggleClass('problem_menu_hovered'); });
  $('#insert_link').click(insert_function('', 'text'));
  $('#insert_image').click(insert_function('!', 'img alt'));
  autocomplete($('#file'), '[% href_find_files %]', {
    formatResult: AutoComplete.formatResult.files,
    onSelect: function (suggestion) {
      $('#file_guid').val(suggestion.data.guid);
      $('#file_description').val(suggestion.data.description);
    }
  });
});
</script>
[% PROCESS includes/menu_end.tti %]
