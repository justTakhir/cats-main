[%- PROCESS "lang/$lang/listview_header.tti" -%]
[%- UNLESS no_form -%]
<form method="post" enctype="multipart/form-data" action="[% href_lv_action %]" accept-charset="UTF-8"
  [%- " id=\"$form_id\"" IF form_id %]
  [%- " name=\"$form_name\"" IF form_name %]>
[%- END %]
[%- UNLESS no_listview_header -%]

[%- MACRO href_delete_icon(url) BLOCK; href(url, '', capt.delete, class = 'icon delete'); END -%]

<table class="listview_header">
<tr>
<td width="40%">
  <input type="hidden" name="submitted" value="1" />
  <button type="submit" name="do_search" id="do_search" value="1" style="min-width: 50px; width: 15%;" class="button">[% capt.search %]</button>
  <span class="nobr">
  <input type="text" name="search" id="search" value="[% search | html %]" style="min-width: 100px; width: 70%;" maxlength="100" class="bordered" />
  <a href="[% href_lv_action %];search=" class="listview_dropper" id="clear_search" title="[% capt.clear_search %]">&#xD7;</a>
  [%- IF search_hints ~%]
  <a href="#" class="listview_dropper" id="toggle_search_hints">&#8981;</a>
  [% END -%]
  </span>
  [% IF search_hints -%]
  <div id="search_hint" class="bordered search_hint" style="display: none;">
    <table>
      <tr id="search_ops">
      [%- FOREACH op IN capt.ops %]
        <td><a href="#" title="[% op.1 %]">[% op.0 %]</a></td>
      [%- END %]
      </tr>
      [%- FOREACH row IN search_hints %]
      <tr>
      [%- FOREACH col IN row -%]
        [%- UNLESS col; '<td></td>'; NEXT; END -%]
        [%- enum = search_enums.item(col.0) %]
        <td class="sh[% col.1;' drop' IF enum.keys.size %]">[% href('#', col.0, col.2) %]
          [%- IF enum.keys.size %]
          <ul>[% FOREACH e IN enum %]<li><a href="#">[% e.key | html %]</a></li>[% END %]</ul>
          [%- END %]
        </td>
        [%- END %]
      [%- END %]
    </table>
  </div>
  [%- END %]
</td>
<td>
  [% content %]
</td>
<td>
  [% IF can_change_cols %]
  <a href="#" class="listview_dropper" id="toggle_csv" style="font-stretch: condensed;">csv</a>[%-~%]
  <a href="#" class="listview_dropper" id="toggle_select_cols">?</a>
  <div id="csv" class="bordered select_cols" style="display: none;">
    [% FOREACH col IN ${lv_array_name}.0.keys.sort %]
    <label><input type="checkbox" name="csv" value="[% col %]"> [% col %]</label>
    [% END %]
    <hr/>
    <label><a href="#" id="link_to_csv">CSV</a></label>
  </div>
  <div id="select_cols" class="bordered select_cols" style="display: none;">
    [% FOREACH cd IN col_defs; NEXT UNLESS cd.col %]
    <label>
      <input type="checkbox" name="cols" value="[% cd.col %]"[% ' checked="checked"' IF visible_cols.item(cd.col) %]>
      [% capt.listview_captions.item(cd.caption) || cd.caption %]
    </label>
    [% END %]
  </div>
  [% END %]
  <button type="submit" name="visible" value="1" class="button">[% capt.show %]</button> [% select('rows', display_rows) %]
  [% INCLUDE includes/pages.tti id = "pages_top" %]
</td>
</tr>
</table>
[%- END %]

<script nonce="[% nonce %]">
[%- UNLESS no_listview_header -%]

function _hide(el) { el.style.display = 'none'; }
function _toggle(el) { el.style.display = el.style.display === 'block' ? 'none' : 'block'; }

function _add_search(text, comma) {
  var i = document.getElementById('search');
  if (comma && i.value && i.value.substring(i.value.length - 1) !== ',')
    i.value += ',';
  i.value += text;
}

function activate_search_hint(a, comma, type) {
  var ul = a.nextElementSibling;
  if (ul) {
    _toggle(ul);
    if (ul.style.display === 'none')
      return;
  }
  _add_search(a.text + (type == 2 ? '()' : ''), comma);
}

function add_search(field, value) { _add_search(field + '=' + value, true); }

function click_enum() {
  var a = this;
  var i = document.getElementById('search');
  if (i.value && i.value.substring (i.value.length - 2) === '()')
    i.value = i.value.substring(0, i.value.length - 1) + a.text + ')';
  else {
    [%# Do not add a comparison twice. %]
    if (i.value && '<>='.indexOf(i.value.charAt(i.value.length - 1)) < 0)
      i.value += '==';
    i.value += a.text;
  }
  _hide(document.getElementById('search_hint'));
}

var handlers = {
  toggle_search_hints: function (e) {
    e.preventDefault();
    var s = document.getElementById('search_hint');
    _toggle(s);
    var ul = s.getElementsByTagName('ul');
    for (var i = 0; i < ul.length; ++i)
      ul[i].style.display = 'none';
  },

  toggle_select_cols: function (e) {
    e.preventDefault();
    _hide(document.getElementById('csv'));
    _toggle(document.getElementById('select_cols'));
  },

  toggle_csv: function (e) {
    e.preventDefault();
    _hide(document.getElementById('select_cols'));
    _toggle(document.getElementById('csv'));
  },

  link_to_csv: function () {
    var csv = document.getElementById('csv');
    var fields = csv.getElementsByTagName('input');
    var p = '';
    for (var i = 0; i < fields.length; ++i) {
      if (fields[i].checked) {
        if (p) p = p + ',';
        p = p + fields[i].value;
      }
    }
    if (p) {
      var dl = document.location;
      window.open([ dl.protocol, '//', dl.host, dl.pathname, dl.search, ';csv=', p ].join(''));
    }
  },

  clear_search: function (e) {
    e.preventDefault();
    var s = document.getElementById('search');
    if (s.value === '') return;
    s.value = '';
    document.getElementById('do_search').click();
    return false;
  }
};

function add_click_fn(fn) { return function (a) { a.addEventListener('click', fn); }; }

function apply_cell_search(root) {
  var cell_search = function (e) {
    var a = this;
    e.preventDefault();
    add_search(a.getAttribute('data-field'), a.getAttribute('data-value'));
  };
  root.querySelectorAll('a.add_search').forEach(add_click_fn(cell_search));
  var cell_search_any = function (e) {
    var a = this;
    e.preventDefault();
    _add_search(a.getAttribute('data-search'), true);
  };
  root.querySelectorAll('a.add_search_any').forEach(add_click_fn(cell_search_any));
}

[% END -%]

window.addEventListener('load', function() {
  [%- UNLESS no_listview_header -%]
  Object.keys(handlers).forEach(function (h) {
    var el = document.getElementById(h);
    if (el) el.addEventListener('click', handlers[h]);
  });
  var add_search_op = function() { _add_search(this.innerText, false); };
  document.querySelectorAll('#search_ops a').forEach(add_click_fn(add_search_op));

  document.querySelectorAll('#search_hint td.drop ul li a').forEach(add_click_fn(click_enum));
  for (var type = 0; type <= 2; ++type) { (function() {
    var t = type;
    var onclick = function() { activate_search_hint(this, true, t); };
    document.querySelectorAll('#search_hint td.sh' + type + ' > a').forEach(add_click_fn(onclick));
  })(); }

  apply_cell_search(document);
  [%- END %]
  [% IF capt.want_to_delete && table_selector && name_selector -%]
  var fmt = function(fmt, a) { return fmt.replace(/{(\d+)}/g, function(m, i) { return a[i]; }); };
  var del_confirm = function(table_selector, name_selector, name_format, want_to_delete) {
    document.querySelectorAll(table_selector + ' tr').forEach(function (tr) {
        var del_button = tr.querySelector('a.delete');
        if (!del_button) return;
        var name_parts = Array.from(
          tr.querySelectorAll(name_selector), function (n) { return n.innerText; });
        if (!name_parts.length) return;
        var name = name_format ? fmt(name_format, name_parts) : name_parts.join(' ');
        var del_href = del_button.href;
        del_button.addEventListener('click', function (e) {
          e.preventDefault();
          if (confirm(want_to_delete + " '" + name + "'?"))
            document.location = del_href;
        });
        del_button.href = '#';
    });
  };
  del_confirm(
    '[% table_selector %]', '[% name_selector %]', '[% name_format %]',
    '[% capt.want_to_delete.squote %]');
  [% END -%]
});

</script>
