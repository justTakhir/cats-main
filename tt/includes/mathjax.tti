[%# MathJax %]
<script type="text/javascript">
function set_tex() {
[%#
  CATS::TeX::Lite preserves spaces between identifiers.
  Emulate that for compatibility by replacing such spaces with "\,".
  Future problems should use "\," or "\ " explicitly.
  Since JavaScript RegExp does not support lookbehind, use magic
  to distinguish identifiers (abc) from TeX commands (\abc).
-%]
  var tex = $(this);
  tex.data({ lite: tex.html() });
  var magic = '~!!!~';
  var t = tex.attr('title');
  t = t.replace(/(\\[a-zA-Z]+)/g, '$1' + magic);
  t = t.replace(/([a-zA-Z0-9},])\s+(?=[a-zA-Z])/g, '$1\\,');
  t = t.replace(new RegExp(magic, 'g'), '');
  tex.html("\\(" + t + '\\)');
}

function unset_tex() {
  var tex = $(this);
  var lite = tex.data().lite;
  if (lite)
    tex.html(lite);
}

function apply_mathjax(p) {
  MathJax.Hub.Queue(
    function() { p.find('span.TeX').each(set_tex); },
    [ 'Typeset', MathJax.Hub, p[0] ]);
}

var MathJax = {
  TeX: {
    Macros: { deg: '^\\circ', sgn: [ '\\operatorname\{sgn\}' ] }
  },
  'HTML-CSS': { scale: 100 },
  SVG: { scale: 100 },
  CommonHTML: { scale: 100 },
  tex2jax: { ignoreClass: 'problem_text', processClass: 'TeX' },
  skipStartupTypeset: true
};
[%#
MathJax.Hub.Startup.signal.Interest(function (message) { console.log("Startup: " + message); });
MathJax.Hub.signal.Interest(function (message) { console.log("Hub: " + message); });
-%]

function is_basic_math(p) { return p.find('.basic_math')[0].checked; }
</script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/gh/mathjax/MathJax@2.7.1/MathJax.js?config=TeX-AMS_CHTML"></script>
<script type="text/javascript">window.MathJax || document.write('<script src="js/lib/MathJax/MathJax.js?config=TeX-AMS_CHTML"><\/script>')</script>

[%- IF onload %]
<script type="text/javascript">
function mathjax_onload() {
  [%# Convert math one problem at a time as a compromise between speed and stability. -%]
  $('div.problem_text').each(function() {
    var p = $(this);
    if (!is_basic_math(p))
      apply_mathjax(p);
  });
}
MathJax.Hub.Register.StartupHook('onLoad', mathjax_onload);
</script>
[% END %]
